
1.  npx --version -> saber que version de react tengo instalada
2.  npx create-react-app my-app -> crear un proyecto de react
3.	npm start -> inicializar el proyecto 
4.  npm run test -> correr los test (presionar w despues de correr el comando 4 para mirar mas opciones)
5.	npm install --save-dev enzyme-to-json -> instalacion para las pruebas de los componentes [item Atajos de teclado -> 3]
6.  npm i --save-dev enzyme enzyme-adapter-react-16 -> instalacion para las pruebas de los componentes [item Atajos de teclado -> 4]
7.	npm run build -> genera el compilado para publicar una aplicacion de react
8.  http-server -o -> correr esta comando si esta instalado 5. en los atajos de teclado , para ver el build arriba en un servidor local
9.  npm install react-router-dom -> instalar la libreria de rutas de react
9.1 npm install --save-dev @types/react-router-dom -> instalar la libreria de rutas de react (ts)
9.2 npm i axios -> peticiones con axios
10. npm install query-string -> instalar libreria para manejar los query-string
11. npm install node-sass ->  instalacion de sass para react [Ayuda -> https://stackoverflow.com/questions/64625050/error-node-sass-version-5-0-0-is-incompatible-with-4-0-0]
12. npm install react-redux redux -> instalacion de redux para react
12.1 npm install @types/react-redux -> instalar el paso 12. junto con este para que quede tipado.
13. npm install firebase -> instalacion de firabase 
14. npm install --save redux-thunk -> peticiones asincronas [ayuda -> https://www.npmjs.com/package/redux-thunk]
14.1 npm install --save redux-devtools-extension -> instalar el devtoos de redux para verlo en el navegador con typescript
15. npm install sweetalert2 -> mensajes de alerta [ayuda -> https://sweetalert2.github.io/#download]
16. npm install moment --save  -> libreria para manejar fechas -> [Ayuda -> https://momentjs.com/]
17. npm run build -> empaquetar para publicar en un servidor
18. npm upgrade-interactive --latest -> actualizar librerias de react

-------------------------------> Expo instalacion
1. npm install --global expo-cli -> instalar expo 
2. expo init my-project -> crear un proyecto de react native
3. npm start -> compilar el proyecto en la web (correrlo) [se puede scanear el qr y abrirlo directamente en el celular]
4. expo install expo-image-picker -> seleccionar una imagen del dispositivo

--------------------------------> react native
1. expo r -c -> limpiar cache


------->Deploy aplication [https://docs.expo.io/distribution/building-standalone-apps/]
5. expo build:android -> generar el paquete
http://tfs.digitalwaresaas.com.co:8080/OpheliaTeamCollection/OpheliaSuite.V2.Bussiness.Caracterizacion/_git/OpheliaSuiteV2.Bussiness.Caracterizacion.ClientFront



-------------------------------> Fin

------Atajos de teclado y instalaciones
1.  rafcp + tap -> genera un componente de React
2.  test + tap -> genera un la estructura de un test de React
3.  https://enzymejs.github.io/enzyme/ -> instalacion para las pruebas de los componentes
4.  https://www.npmjs.com/package/enzyme-to-json -> instalacion para las pruebas de los componentes
5.  https://www.npmjs.com/package/http-server -> instalacion de un localhost para probar react el despliege
6.  https://reactrouter.com/web/api/NavLink -> instalacion de las rutas de react 

----Publicar en git
1. cambiar de nombre la carpeta build a docs
2. 

----Subir una imagen 
https://api.cloudinary.com/v1_1/djrjk9gls/upload
params -> file, upload_preset


---------------React + TS
1.  npx create-react-app mi-app --template typescript -> crear un proyecto de react con TS
2.  npm start -> inicializar la aplicacion [estar parado en la carpeta del proyecto.]
3.  
