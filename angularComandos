1.   tsc --warch -> listener para compilar los archivos .ts 
2.   ng new miApp -> crear un nuevo proyecto de angular
3.   ng serve -o -> abrir el proyecto 
3.1  ng serve --port 4401  -> abrir el proyecto en un puerto deseado
4.   ng g c component/footer -> crear la arquitectura de un componentenew
5.   npm install bootstrap --save -> instalar el paquete de bootstrap
6.   npm install jquery --save -> instalar jquery
7.   npm install popper.js --save -> instalar popper
8.   ng g c components/buscador --skipTests -> crear un componente sin el archivo de test
9.   ng g p pipes/capitalizado -> hacer un pipe 
10.  ng g c components/ngStyle -it -is -> crear un componente con una hoja de estilo css dentro del mismo y html
11.	 ng g c components/usuario/usuarioNuevo -is -it --flat -> crear un compenete sin carpeta "flat"
12.	 ng g guard servicios/auth --skipTests -> servicio de autenticacion "guard o  guardia de la rutas"
13.  ng g s services/deseos -> crear un servicio
14.	 ng g m appRouting --flat -> crear el archivo de las rutas 
15.	 ng g m -> es para generar un modulo como para añadir material al angular 
16.	 ng g c componentes/mapa --module=app.module -> cuando hay mas de un modulo hay que especificar que modulo utilizar para que el componente implemente dicho modulo  
17.	 ng build --prod -> crear carpeta disk para desplegar la aplicacion en el servidor	
18.	 ng g c contador/hijo --skipTests -is -> componente sin css y el archivo de pruebas
19.  npm install @ngrx/store --save -> instalar ngrx.io
20.  npm install @ngrx/store-devtools --save -> instalar complemento de chrome
21.  ng g m pages/login --routing -> crear un archivo de rutas y un modulo para esa pagina
22.  ng build --prod --base-href="./" -> aplicacion para produccion con ./
23.  ng build --prod --base-href= -> aplicacion para produccion asi ""



comandos de ionic 
1.   npm install -g @ionic/cli -> instalar ionic 
2.   ionic start myApp tabs -> crear un proyecto ionic 
3.   ionic serve -> ejecuta el app  
4.   ionic g s services/deseos -> crear un servicio
5.   ionic g page pages/agregar -> agregar una pagina 
6.   ionic serve --lab -> ver la aplicacion en os y android simultaneamente
7.   ionic g p pages/inicio -> crear una pipe
8.   ionic g m components -> crear un modulo
9.   ionic g c  components/header -> crear un componente
10.	 npm i -D @types/googlemaps -> instalar google maps y utilizarlo con typescript [https://developers.google.com/maps/documentation/javascript/using-typescript]
10.1 ionic serve -c -> 
11.  npm install -g cordova-res -> generar el incono y la pantalla de presentacion 
--------------> sqlite
12.  npm install @ionic-native/sqlite @ionic-native/sqlite-porter -> instalar sql lite
13.  ionic cordova plugin add cordova-sqlite-storage -> plugin necesario para el comando [12.]
14.  ionic cordova plugin add uk.co.workingedge.cordova.plugin.sqliteporter -> plugin necesario para el comando [12.]
------------------------------------------
------------------> storange
1. npm i @ionic/storage -> instalr el paquete 
2. ionic cordova plugin add cordova-sqlite-storage -> instalar el plugin del paquete del comando [1.]
3. npm install @ionic/storage-angular -> cuando estas usando ionic con angular

----------------
-----------------> validar si hay conexion a internet
1. npm i @ionic-native/network
1.1 ionic cordova plugin add cordova-plugin-network-information -> plugin para android sepa. [1. necesario]
2. npm i @ionic-native/core
------------------
-------------> capacitor delpliege en android
11.  ionic build -> generar el archivo para desplegar
12.  ionic capacitor add android -> despues del paso 11. se ejecuta este comando
13.  ionic capacitor copy android -> genrar el archivo para abrir el proyecto en android(refrescar)
14.  ionic capacitor run android -l --host=192.168.1.106 -> listener para compilar en android super rapido
15.  ionic integrations disable capacitor -> deshabilitar capacitor
16.  ionic integrations enable capacitor -> habilitado capacitor
17.  npx cap open android -> abrir el proyecyto de android en android
-------------> cordova delpliege en android
16.  npm i -g cordova -> instalar cordova 
17.  cordova.cmd platform add android --save -> configurar cordova en angular
17.1 ionic cordova platforms add ios -> añadir la plataforma de ios 
18.  ionic cordova platform remove android -> remover el comando [.17]
19.  ionic cordova prepare android -> generar el archivo de android
20.  ionic integrations enable cordova --add -> volver a generar archivo xml
21.	 npm i -g native-run -> instlar para poder ver que dispositivos puedo simular.
22.  cordova build --android -> generar el precompilado de android
23.  cordova plugin add cordova-plugin-googlemaps
24.  npm i cordova-plugin-nativegeocoder
25.  npm install @ionic-native/geolocation
26.  ionic integrations enable cordova --add
27.  native-run android --list -> ver que dispositivos tengo para realizar la emulacion. 
28.  ionic cordova run android --target=ef179b14 -l -> con el comando [27.] tienes el nombre del target, funciona para emular la apk, "-l" es livereload 
29.  Registrar los dominios para poder hacer las peticiones -> resources/android/xml
<?xml version="1.0" encoding="utf-8"?>
<network-security-config>
    <base-config cleartextTrafficPermitted="true">
        <trust-archors>
            <certificates src="system"/>
        </trust-archors>
    </base-config>
    <domain-config cleartextTrafficPermitted="true">
        <domain includeSubdomains="true">localhost</domain>
        <domain includeSubdomains="true">https://davincilb.ophelia.co:8085/</domain>
        <domain includeSubdomains="true">https://factorydev.digitalwaresaas.com.co:8085/</domain>
    </domain-config>
</network-security-config>
fin 29
--------------> descargar un pdf ionic
1. npm install @ionic-native/file-opener cordova-plugin-file-opener2
import { HttpClientModule } from '@angular/common/http';
import { FileOpener } from '@ionic-native/file-opener/ngx';


----------------recargar la pagina 
inyectar en el controlador ->    private activatedRoute: ActivatedRoute,
  this.router.navigate(["./"], { queryParams: { id: res.id }, relativeTo: this.activatedRoute })
---------------------------------------------------


configuraciones
---------------------------------------------------
1. Instalar la version que se necesita

Desintalaremos angular cli

npm uninstall -g angular-cli
npm uninstall --save-dev angular-cli

Actualizar el Global Package de angular cli

npm uninstall -g @angular/cli
npm cache verify
# if npm version is < 5 then use `npm cache clean`
npm install -g @angular/cli@latest

Actualizar localmente en su proyecto (Package.json)

npm install --save-dev @angular/cli@latest
---------------------------------------------------

AIzaSyC2NdlExyCTBBJnlrww_4DJpf9TdB_uq0Q
ng serve --proxy-config proxy.conf.json

----------------------------------------redux

,{ runtimeChecks: {
      strictStateImmutability: false,
      strictActionImmutability: true,
    }}
	
-----------------------
	atob() -> desencriptar una base 64 
	btoa() -> enemcriptar a base 64
