1. Add-Migration Initial ->  Se crear la migracion ("codigo")
2. Update-database -> se ejecuta la migracion en la base de datos 
3. Script-Migration -> obtener el script de base de datos
3. Script-Migration -Idempotent -> obtener el script de base de datos de los ultimos cambios

----------------------------------configuraciones-----------------------
Microsoft.EntityFrameworkCore.SqlServer
Microsoft.EntityFrameworkCore.Design
Microsoft.EntityFrameworkCore.Tools

AutoMapper.Extensions.Microsoft.DependencyInjection
Azure.Storage.Blobs
Microsoft.AspNetCore.Mvc.NewtonsoftJson
System.Linq.Dynamic.Core
Microsoft.EntityFrameworkCore.SqlServer.NetTopologySuite
Microsoft.EntityFrameworkCore.InMemory
Moq
-------------------------repo---------
https://github.com/gavilanch/CursoRESTfulAPIsASPNETCore



Scaffold-DbContext 'Data Source=DESKTOP-OPTH6EV\SQLEXPRESS;Initial Catalog=Prueba;Integrated Security=True' Microsoft.EntityFrameworkCore.SqlServer -ContextDir Data -OutputDir Models


Scaffold-DbContext "Data Source=DESKTOP-OPTH6EV\SQLEXPRESS;Initial Catalog=Prueba;Integrated Security=True" Microsoft.EntityFrameworkCore.SqlServer -OutputDir Models  -Context "Contexto/Context"

1. Scaffold-DbContext "Data Source=DESKTOP-1EBTD6O\SQLEXPRESS;Initial Catalog=AdventureWorks2019;Integrated Security=True" Microsoft.EntityFrameworkCore.SqlServer -OutputDir Models  -Context "Contexto/Context"



Base.Datos.Contexto.Entidades

https://localhost:44338/swagger/index.html

Mire donde esta parado en que poryecto en la consola de nuget 
Scaffold-DbContext "Data Source=DESKTOP-1EBTD6O\SQLEXPRESS;Initial Catalog=PeliculasAPI;Integrated Security=True" Microsoft.EntityFrameworkCore.SqlServer -OutputDir Contexto/Entidades  -Context Contexto


-----------------------------------------------------------------------------

//var esValido = TryValidateModel(entidadDTO);

            //if (!esValido)
            //{
            //    string messages = string.Join("/", ModelState.Values
            //                            .SelectMany(x => x.Errors)
            //                            .Select(x => x.ErrorMessage));
            //    var data = messages.Split("/");
            //    return BadRequest(ModelState);
            //}
			
			92e2a6807c69dc62c113518b41f5ba36296a3ad9
			
-------------------------------------------------------------------

cors--------------------------------------
parte uno va ConfigureServices
services.AddCors(options => options.AddPolicy("ApiCorsPolicy", build =>
            {
                build.WithOrigins("http://localhost:4200")
                     .AllowAnyMethod()
                     .AllowAnyHeader();
            }));
parte dos 

va en cConfigure
app.UseCors("ApiCorsPolicy");
fin--------------------------------------

